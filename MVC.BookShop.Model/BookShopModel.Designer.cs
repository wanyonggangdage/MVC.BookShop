//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("book_shopModel", "FK_Book_Category", "Categories", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MVC.BookShop.Model.Categories), "Books", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MVC.BookShop.Model.Books), true)]
[assembly: EdmRelationshipAttribute("book_shopModel", "FK_Books_Publishers", "Publishers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MVC.BookShop.Model.Publishers), "Books", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MVC.BookShop.Model.Books), true)]
[assembly: EdmRelationshipAttribute("book_shopModel", "FK_Cart_Books", "Books", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MVC.BookShop.Model.Books), "Cart", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MVC.BookShop.Model.Cart), true)]
[assembly: EdmRelationshipAttribute("book_shopModel", "FK_OrderBook_Book", "Books", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MVC.BookShop.Model.Books), "OrderBook", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MVC.BookShop.Model.OrderBook), true)]
[assembly: EdmRelationshipAttribute("book_shopModel", "FK_Cart_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MVC.BookShop.Model.Users), "Cart", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MVC.BookShop.Model.Cart), true)]
[assembly: EdmRelationshipAttribute("book_shopModel", "FK_OrderBook_Order", "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MVC.BookShop.Model.Orders), "OrderBook", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MVC.BookShop.Model.OrderBook), true)]
[assembly: EdmRelationshipAttribute("book_shopModel", "FK_Order_User", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MVC.BookShop.Model.Users), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MVC.BookShop.Model.Orders), true)]
[assembly: EdmRelationshipAttribute("book_shopModel", "FK_Users_UserStates", "UserState", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MVC.BookShop.Model.UserState), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MVC.BookShop.Model.Users), true)]

#endregion

namespace MVC.BookShop.Model
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class book_shopEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“book_shopEntities”部分中的连接字符串初始化新 book_shopEntities 对象。
        /// </summary>
        public book_shopEntities() : base("name=book_shopEntities", "book_shopEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 book_shopEntities 对象。
        /// </summary>
        public book_shopEntities(string connectionString) : base(connectionString, "book_shopEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 book_shopEntities 对象。
        /// </summary>
        public book_shopEntities(EntityConnection connection) : base(connection, "book_shopEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Articel_Words> Articel_Words
        {
            get
            {
                if ((_Articel_Words == null))
                {
                    _Articel_Words = base.CreateObjectSet<Articel_Words>("Articel_Words");
                }
                return _Articel_Words;
            }
        }
        private ObjectSet<Articel_Words> _Articel_Words;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<BookComment> BookComment
        {
            get
            {
                if ((_BookComment == null))
                {
                    _BookComment = base.CreateObjectSet<BookComment>("BookComment");
                }
                return _BookComment;
            }
        }
        private ObjectSet<BookComment> _BookComment;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Books> Books
        {
            get
            {
                if ((_Books == null))
                {
                    _Books = base.CreateObjectSet<Books>("Books");
                }
                return _Books;
            }
        }
        private ObjectSet<Books> _Books;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Cart> Cart
        {
            get
            {
                if ((_Cart == null))
                {
                    _Cart = base.CreateObjectSet<Cart>("Cart");
                }
                return _Cart;
            }
        }
        private ObjectSet<Cart> _Cart;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Categories> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Categories>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Categories> _Categories;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<CheckEmail> CheckEmail
        {
            get
            {
                if ((_CheckEmail == null))
                {
                    _CheckEmail = base.CreateObjectSet<CheckEmail>("CheckEmail");
                }
                return _CheckEmail;
            }
        }
        private ObjectSet<CheckEmail> _CheckEmail;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<OrderBook> OrderBook
        {
            get
            {
                if ((_OrderBook == null))
                {
                    _OrderBook = base.CreateObjectSet<OrderBook>("OrderBook");
                }
                return _OrderBook;
            }
        }
        private ObjectSet<OrderBook> _OrderBook;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Orders> Orders
        {
            get
            {
                if ((_Orders == null))
                {
                    _Orders = base.CreateObjectSet<Orders>("Orders");
                }
                return _Orders;
            }
        }
        private ObjectSet<Orders> _Orders;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Publishers> Publishers
        {
            get
            {
                if ((_Publishers == null))
                {
                    _Publishers = base.CreateObjectSet<Publishers>("Publishers");
                }
                return _Publishers;
            }
        }
        private ObjectSet<Publishers> _Publishers;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Settings> Settings
        {
            get
            {
                if ((_Settings == null))
                {
                    _Settings = base.CreateObjectSet<Settings>("Settings");
                }
                return _Settings;
            }
        }
        private ObjectSet<Settings> _Settings;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SysFun> SysFun
        {
            get
            {
                if ((_SysFun == null))
                {
                    _SysFun = base.CreateObjectSet<SysFun>("SysFun");
                }
                return _SysFun;
            }
        }
        private ObjectSet<SysFun> _SysFun;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserState> UserState
        {
            get
            {
                if ((_UserState == null))
                {
                    _UserState = base.CreateObjectSet<UserState>("UserState");
                }
                return _UserState;
            }
        }
        private ObjectSet<UserState> _UserState;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<VidoFile> VidoFile
        {
            get
            {
                if ((_VidoFile == null))
                {
                    _VidoFile = base.CreateObjectSet<VidoFile>("VidoFile");
                }
                return _VidoFile;
            }
        }
        private ObjectSet<VidoFile> _VidoFile;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 Articel_Words EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToArticel_Words(Articel_Words articel_Words)
        {
            base.AddObject("Articel_Words", articel_Words);
        }
    
        /// <summary>
        /// 用于向 BookComment EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToBookComment(BookComment bookComment)
        {
            base.AddObject("BookComment", bookComment);
        }
    
        /// <summary>
        /// 用于向 Books EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToBooks(Books books)
        {
            base.AddObject("Books", books);
        }
    
        /// <summary>
        /// 用于向 Cart EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCart(Cart cart)
        {
            base.AddObject("Cart", cart);
        }
    
        /// <summary>
        /// 用于向 Categories EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCategories(Categories categories)
        {
            base.AddObject("Categories", categories);
        }
    
        /// <summary>
        /// 用于向 CheckEmail EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCheckEmail(CheckEmail checkEmail)
        {
            base.AddObject("CheckEmail", checkEmail);
        }
    
        /// <summary>
        /// 用于向 OrderBook EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToOrderBook(OrderBook orderBook)
        {
            base.AddObject("OrderBook", orderBook);
        }
    
        /// <summary>
        /// 用于向 Orders EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToOrders(Orders orders)
        {
            base.AddObject("Orders", orders);
        }
    
        /// <summary>
        /// 用于向 Publishers EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPublishers(Publishers publishers)
        {
            base.AddObject("Publishers", publishers);
        }
    
        /// <summary>
        /// 用于向 Settings EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSettings(Settings settings)
        {
            base.AddObject("Settings", settings);
        }
    
        /// <summary>
        /// 用于向 sysdiagrams EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }
    
        /// <summary>
        /// 用于向 SysFun EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSysFun(SysFun sysFun)
        {
            base.AddObject("SysFun", sysFun);
        }
    
        /// <summary>
        /// 用于向 Users EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }
    
        /// <summary>
        /// 用于向 UserState EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserState(UserState userState)
        {
            base.AddObject("UserState", userState);
        }
    
        /// <summary>
        /// 用于向 VidoFile EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToVidoFile(VidoFile vidoFile)
        {
            base.AddObject("VidoFile", vidoFile);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="book_shopModel", Name="Articel_Words")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Articel_Words : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Articel_Words 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="wordPattern">WordPattern 属性的初始值。</param>
        /// <param name="isForbid">IsForbid 属性的初始值。</param>
        /// <param name="isMod">IsMod 属性的初始值。</param>
        public static Articel_Words CreateArticel_Words(global::System.Int32 id, global::System.String wordPattern, global::System.Boolean isForbid, global::System.Boolean isMod)
        {
            Articel_Words articel_Words = new Articel_Words();
            articel_Words.Id = id;
            articel_Words.WordPattern = wordPattern;
            articel_Words.IsForbid = isForbid;
            articel_Words.IsMod = isMod;
            return articel_Words;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WordPattern
        {
            get
            {
                return _WordPattern;
            }
            set
            {
                OnWordPatternChanging(value);
                ReportPropertyChanging("WordPattern");
                _WordPattern = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WordPattern");
                OnWordPatternChanged();
            }
        }
        private global::System.String _WordPattern;
        partial void OnWordPatternChanging(global::System.String value);
        partial void OnWordPatternChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsForbid
        {
            get
            {
                return _IsForbid;
            }
            set
            {
                OnIsForbidChanging(value);
                ReportPropertyChanging("IsForbid");
                _IsForbid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsForbid");
                OnIsForbidChanged();
            }
        }
        private global::System.Boolean _IsForbid;
        partial void OnIsForbidChanging(global::System.Boolean value);
        partial void OnIsForbidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMod
        {
            get
            {
                return _IsMod;
            }
            set
            {
                OnIsModChanging(value);
                ReportPropertyChanging("IsMod");
                _IsMod = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMod");
                OnIsModChanged();
            }
        }
        private global::System.Boolean _IsMod;
        partial void OnIsModChanging(global::System.Boolean value);
        partial void OnIsModChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReplaceWord
        {
            get
            {
                return _ReplaceWord;
            }
            set
            {
                OnReplaceWordChanging(value);
                ReportPropertyChanging("ReplaceWord");
                _ReplaceWord = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReplaceWord");
                OnReplaceWordChanged();
            }
        }
        private global::System.String _ReplaceWord;
        partial void OnReplaceWordChanging(global::System.String value);
        partial void OnReplaceWordChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="book_shopModel", Name="BookComment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BookComment : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 BookComment 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="msg">Msg 属性的初始值。</param>
        /// <param name="createDateTime">CreateDateTime 属性的初始值。</param>
        /// <param name="bookId">BookId 属性的初始值。</param>
        public static BookComment CreateBookComment(global::System.Int32 id, global::System.String msg, global::System.DateTime createDateTime, global::System.Int32 bookId)
        {
            BookComment bookComment = new BookComment();
            bookComment.Id = id;
            bookComment.Msg = msg;
            bookComment.CreateDateTime = createDateTime;
            bookComment.BookId = bookId;
            return bookComment;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Msg
        {
            get
            {
                return _Msg;
            }
            set
            {
                OnMsgChanging(value);
                ReportPropertyChanging("Msg");
                _Msg = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Msg");
                OnMsgChanged();
            }
        }
        private global::System.String _Msg;
        partial void OnMsgChanging(global::System.String value);
        partial void OnMsgChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDateTime
        {
            get
            {
                return _CreateDateTime;
            }
            set
            {
                OnCreateDateTimeChanging(value);
                ReportPropertyChanging("CreateDateTime");
                _CreateDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDateTime");
                OnCreateDateTimeChanged();
            }
        }
        private global::System.DateTime _CreateDateTime;
        partial void OnCreateDateTimeChanging(global::System.DateTime value);
        partial void OnCreateDateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookId
        {
            get
            {
                return _BookId;
            }
            set
            {
                OnBookIdChanging(value);
                ReportPropertyChanging("BookId");
                _BookId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookId");
                OnBookIdChanged();
            }
        }
        private global::System.Int32 _BookId;
        partial void OnBookIdChanging(global::System.Int32 value);
        partial void OnBookIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="book_shopModel", Name="Books")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Books : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Books 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="title">Title 属性的初始值。</param>
        /// <param name="author">Author 属性的初始值。</param>
        /// <param name="publisherId">PublisherId 属性的初始值。</param>
        /// <param name="publishDate">PublishDate 属性的初始值。</param>
        /// <param name="iSBN">ISBN 属性的初始值。</param>
        /// <param name="wordsCount">WordsCount 属性的初始值。</param>
        /// <param name="unitPrice">UnitPrice 属性的初始值。</param>
        /// <param name="categoryId">CategoryId 属性的初始值。</param>
        /// <param name="clicks">Clicks 属性的初始值。</param>
        public static Books CreateBooks(global::System.Int32 id, global::System.String title, global::System.String author, global::System.Int32 publisherId, global::System.DateTime publishDate, global::System.String iSBN, global::System.Int32 wordsCount, global::System.Decimal unitPrice, global::System.Int32 categoryId, global::System.Int32 clicks)
        {
            Books books = new Books();
            books.Id = id;
            books.Title = title;
            books.Author = author;
            books.PublisherId = publisherId;
            books.PublishDate = publishDate;
            books.ISBN = iSBN;
            books.WordsCount = wordsCount;
            books.UnitPrice = unitPrice;
            books.CategoryId = categoryId;
            books.Clicks = clicks;
            return books;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Author
        {
            get
            {
                return _Author;
            }
            set
            {
                OnAuthorChanging(value);
                ReportPropertyChanging("Author");
                _Author = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Author");
                OnAuthorChanged();
            }
        }
        private global::System.String _Author;
        partial void OnAuthorChanging(global::System.String value);
        partial void OnAuthorChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PublisherId
        {
            get
            {
                return _PublisherId;
            }
            set
            {
                OnPublisherIdChanging(value);
                ReportPropertyChanging("PublisherId");
                _PublisherId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PublisherId");
                OnPublisherIdChanged();
            }
        }
        private global::System.Int32 _PublisherId;
        partial void OnPublisherIdChanging(global::System.Int32 value);
        partial void OnPublisherIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PublishDate
        {
            get
            {
                return _PublishDate;
            }
            set
            {
                OnPublishDateChanging(value);
                ReportPropertyChanging("PublishDate");
                _PublishDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PublishDate");
                OnPublishDateChanged();
            }
        }
        private global::System.DateTime _PublishDate;
        partial void OnPublishDateChanging(global::System.DateTime value);
        partial void OnPublishDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISBN
        {
            get
            {
                return _ISBN;
            }
            set
            {
                OnISBNChanging(value);
                ReportPropertyChanging("ISBN");
                _ISBN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ISBN");
                OnISBNChanged();
            }
        }
        private global::System.String _ISBN;
        partial void OnISBNChanging(global::System.String value);
        partial void OnISBNChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WordsCount
        {
            get
            {
                return _WordsCount;
            }
            set
            {
                OnWordsCountChanging(value);
                ReportPropertyChanging("WordsCount");
                _WordsCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WordsCount");
                OnWordsCountChanged();
            }
        }
        private global::System.Int32 _WordsCount;
        partial void OnWordsCountChanging(global::System.Int32 value);
        partial void OnWordsCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Decimal _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Decimal value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContentDescription
        {
            get
            {
                return _ContentDescription;
            }
            set
            {
                OnContentDescriptionChanging(value);
                ReportPropertyChanging("ContentDescription");
                _ContentDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContentDescription");
                OnContentDescriptionChanged();
            }
        }
        private global::System.String _ContentDescription;
        partial void OnContentDescriptionChanging(global::System.String value);
        partial void OnContentDescriptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AurhorDescription
        {
            get
            {
                return _AurhorDescription;
            }
            set
            {
                OnAurhorDescriptionChanging(value);
                ReportPropertyChanging("AurhorDescription");
                _AurhorDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AurhorDescription");
                OnAurhorDescriptionChanged();
            }
        }
        private global::System.String _AurhorDescription;
        partial void OnAurhorDescriptionChanging(global::System.String value);
        partial void OnAurhorDescriptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EditorComment
        {
            get
            {
                return _EditorComment;
            }
            set
            {
                OnEditorCommentChanging(value);
                ReportPropertyChanging("EditorComment");
                _EditorComment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EditorComment");
                OnEditorCommentChanged();
            }
        }
        private global::System.String _EditorComment;
        partial void OnEditorCommentChanging(global::System.String value);
        partial void OnEditorCommentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TOC
        {
            get
            {
                return _TOC;
            }
            set
            {
                OnTOCChanging(value);
                ReportPropertyChanging("TOC");
                _TOC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TOC");
                OnTOCChanged();
            }
        }
        private global::System.String _TOC;
        partial void OnTOCChanging(global::System.String value);
        partial void OnTOCChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Clicks
        {
            get
            {
                return _Clicks;
            }
            set
            {
                OnClicksChanging(value);
                ReportPropertyChanging("Clicks");
                _Clicks = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Clicks");
                OnClicksChanged();
            }
        }
        private global::System.Int32 _Clicks;
        partial void OnClicksChanging(global::System.Int32 value);
        partial void OnClicksChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("book_shopModel", "FK_Book_Category", "Categories")]
        public Categories Categories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categories>("book_shopModel.FK_Book_Category", "Categories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categories>("book_shopModel.FK_Book_Category", "Categories").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Categories> CategoriesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categories>("book_shopModel.FK_Book_Category", "Categories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Categories>("book_shopModel.FK_Book_Category", "Categories", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("book_shopModel", "FK_Books_Publishers", "Publishers")]
        public Publishers Publishers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Publishers>("book_shopModel.FK_Books_Publishers", "Publishers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Publishers>("book_shopModel.FK_Books_Publishers", "Publishers").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Publishers> PublishersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Publishers>("book_shopModel.FK_Books_Publishers", "Publishers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Publishers>("book_shopModel.FK_Books_Publishers", "Publishers", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("book_shopModel", "FK_Cart_Books", "Cart")]
        public EntityCollection<Cart> Cart
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cart>("book_shopModel.FK_Cart_Books", "Cart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cart>("book_shopModel.FK_Cart_Books", "Cart", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("book_shopModel", "FK_OrderBook_Book", "OrderBook")]
        public EntityCollection<OrderBook> OrderBook
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderBook>("book_shopModel.FK_OrderBook_Book", "OrderBook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderBook>("book_shopModel.FK_OrderBook_Book", "OrderBook", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="book_shopModel", Name="Cart")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cart : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Cart 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="userId">UserId 属性的初始值。</param>
        /// <param name="bookId">BookId 属性的初始值。</param>
        /// <param name="count">Count 属性的初始值。</param>
        public static Cart CreateCart(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 bookId, global::System.Int32 count)
        {
            Cart cart = new Cart();
            cart.Id = id;
            cart.UserId = userId;
            cart.BookId = bookId;
            cart.Count = count;
            return cart;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookId
        {
            get
            {
                return _BookId;
            }
            set
            {
                OnBookIdChanging(value);
                ReportPropertyChanging("BookId");
                _BookId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookId");
                OnBookIdChanged();
            }
        }
        private global::System.Int32 _BookId;
        partial void OnBookIdChanging(global::System.Int32 value);
        partial void OnBookIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private global::System.Int32 _Count;
        partial void OnCountChanging(global::System.Int32 value);
        partial void OnCountChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("book_shopModel", "FK_Cart_Books", "Books")]
        public Books Books
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Books>("book_shopModel.FK_Cart_Books", "Books").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Books>("book_shopModel.FK_Cart_Books", "Books").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Books> BooksReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Books>("book_shopModel.FK_Cart_Books", "Books");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Books>("book_shopModel.FK_Cart_Books", "Books", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("book_shopModel", "FK_Cart_Users", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("book_shopModel.FK_Cart_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("book_shopModel.FK_Cart_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("book_shopModel.FK_Cart_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("book_shopModel.FK_Cart_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="book_shopModel", Name="Categories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Categories : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Categories 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static Categories CreateCategories(global::System.Int32 id, global::System.String name)
        {
            Categories categories = new Categories();
            categories.Id = id;
            categories.Name = name;
            return categories;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("book_shopModel", "FK_Book_Category", "Books")]
        public EntityCollection<Books> Books
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Books>("book_shopModel.FK_Book_Category", "Books");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Books>("book_shopModel.FK_Book_Category", "Books", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="book_shopModel", Name="CheckEmail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CheckEmail : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 CheckEmail 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        public static CheckEmail CreateCheckEmail(global::System.Int32 id)
        {
            CheckEmail checkEmail = new CheckEmail();
            checkEmail.Id = id;
            return checkEmail;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Actived
        {
            get
            {
                return _Actived;
            }
            set
            {
                OnActivedChanging(value);
                ReportPropertyChanging("Actived");
                _Actived = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Actived");
                OnActivedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Actived;
        partial void OnActivedChanging(Nullable<global::System.Boolean> value);
        partial void OnActivedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActiveCode
        {
            get
            {
                return _ActiveCode;
            }
            set
            {
                OnActiveCodeChanging(value);
                ReportPropertyChanging("ActiveCode");
                _ActiveCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActiveCode");
                OnActiveCodeChanged();
            }
        }
        private global::System.String _ActiveCode;
        partial void OnActiveCodeChanging(global::System.String value);
        partial void OnActiveCodeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="book_shopModel", Name="OrderBook")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderBook : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 OrderBook 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="orderID">OrderID 属性的初始值。</param>
        /// <param name="bookID">BookID 属性的初始值。</param>
        /// <param name="quantity">Quantity 属性的初始值。</param>
        /// <param name="unitPrice">UnitPrice 属性的初始值。</param>
        public static OrderBook CreateOrderBook(global::System.Int32 id, global::System.String orderID, global::System.Int32 bookID, global::System.Int32 quantity, global::System.Decimal unitPrice)
        {
            OrderBook orderBook = new OrderBook();
            orderBook.Id = id;
            orderBook.OrderID = orderID;
            orderBook.BookID = bookID;
            orderBook.Quantity = quantity;
            orderBook.UnitPrice = unitPrice;
            return orderBook;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.String _OrderID;
        partial void OnOrderIDChanging(global::System.String value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookID
        {
            get
            {
                return _BookID;
            }
            set
            {
                OnBookIDChanging(value);
                ReportPropertyChanging("BookID");
                _BookID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookID");
                OnBookIDChanged();
            }
        }
        private global::System.Int32 _BookID;
        partial void OnBookIDChanging(global::System.Int32 value);
        partial void OnBookIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Decimal _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Decimal value);
        partial void OnUnitPriceChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("book_shopModel", "FK_OrderBook_Book", "Books")]
        public Books Books
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Books>("book_shopModel.FK_OrderBook_Book", "Books").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Books>("book_shopModel.FK_OrderBook_Book", "Books").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Books> BooksReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Books>("book_shopModel.FK_OrderBook_Book", "Books");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Books>("book_shopModel.FK_OrderBook_Book", "Books", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("book_shopModel", "FK_OrderBook_Order", "Orders")]
        public Orders Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Orders>("book_shopModel.FK_OrderBook_Order", "Orders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Orders>("book_shopModel.FK_OrderBook_Order", "Orders").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Orders> OrdersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Orders>("book_shopModel.FK_OrderBook_Order", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Orders>("book_shopModel.FK_OrderBook_Order", "Orders", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="book_shopModel", Name="Orders")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Orders : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Orders 对象。
        /// </summary>
        /// <param name="orderId">OrderId 属性的初始值。</param>
        /// <param name="orderDate">OrderDate 属性的初始值。</param>
        /// <param name="userId">UserId 属性的初始值。</param>
        /// <param name="totalPrice">TotalPrice 属性的初始值。</param>
        /// <param name="state">state 属性的初始值。</param>
        public static Orders CreateOrders(global::System.String orderId, global::System.DateTime orderDate, global::System.Int32 userId, global::System.Decimal totalPrice, global::System.Int32 state)
        {
            Orders orders = new Orders();
            orders.OrderId = orderId;
            orders.OrderDate = orderDate;
            orders.UserId = userId;
            orders.TotalPrice = totalPrice;
            orders.state = state;
            return orders;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrderId
        {
            get
            {
                return _OrderId;
            }
            set
            {
                if (_OrderId != value)
                {
                    OnOrderIdChanging(value);
                    ReportPropertyChanging("OrderId");
                    _OrderId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("OrderId");
                    OnOrderIdChanged();
                }
            }
        }
        private global::System.String _OrderId;
        partial void OnOrderIdChanging(global::System.String value);
        partial void OnOrderIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OrderDate
        {
            get
            {
                return _OrderDate;
            }
            set
            {
                OnOrderDateChanging(value);
                ReportPropertyChanging("OrderDate");
                _OrderDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderDate");
                OnOrderDateChanged();
            }
        }
        private global::System.DateTime _OrderDate;
        partial void OnOrderDateChanging(global::System.DateTime value);
        partial void OnOrderDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalPrice
        {
            get
            {
                return _TotalPrice;
            }
            set
            {
                OnTotalPriceChanging(value);
                ReportPropertyChanging("TotalPrice");
                _TotalPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPrice");
                OnTotalPriceChanged();
            }
        }
        private global::System.Decimal _TotalPrice;
        partial void OnTotalPriceChanging(global::System.Decimal value);
        partial void OnTotalPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostAddress
        {
            get
            {
                return _PostAddress;
            }
            set
            {
                OnPostAddressChanging(value);
                ReportPropertyChanging("PostAddress");
                _PostAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostAddress");
                OnPostAddressChanged();
            }
        }
        private global::System.String _PostAddress;
        partial void OnPostAddressChanging(global::System.String value);
        partial void OnPostAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 state
        {
            get
            {
                return _state;
            }
            set
            {
                OnstateChanging(value);
                ReportPropertyChanging("state");
                _state = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("state");
                OnstateChanged();
            }
        }
        private global::System.Int32 _state;
        partial void OnstateChanging(global::System.Int32 value);
        partial void OnstateChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("book_shopModel", "FK_OrderBook_Order", "OrderBook")]
        public EntityCollection<OrderBook> OrderBook
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderBook>("book_shopModel.FK_OrderBook_Order", "OrderBook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderBook>("book_shopModel.FK_OrderBook_Order", "OrderBook", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("book_shopModel", "FK_Order_User", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("book_shopModel.FK_Order_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("book_shopModel.FK_Order_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("book_shopModel.FK_Order_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("book_shopModel.FK_Order_User", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="book_shopModel", Name="Publishers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Publishers : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Publishers 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static Publishers CreatePublishers(global::System.Int32 id, global::System.String name)
        {
            Publishers publishers = new Publishers();
            publishers.Id = id;
            publishers.Name = name;
            return publishers;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("book_shopModel", "FK_Books_Publishers", "Books")]
        public EntityCollection<Books> Books
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Books>("book_shopModel.FK_Books_Publishers", "Books");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Books>("book_shopModel.FK_Books_Publishers", "Books", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="book_shopModel", Name="Settings")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Settings : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Settings 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        public static Settings CreateSettings(global::System.Int32 id)
        {
            Settings settings = new Settings();
            settings.Id = id;
            return settings;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="book_shopModel", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 sysdiagrams 对象。
        /// </summary>
        /// <param name="name">name 属性的初始值。</param>
        /// <param name="principal_id">principal_id 属性的初始值。</param>
        /// <param name="diagram_id">diagram_id 属性的初始值。</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="book_shopModel", Name="SysFun")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SysFun : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SysFun 对象。
        /// </summary>
        /// <param name="nodeId">NodeId 属性的初始值。</param>
        /// <param name="displayName">DisplayName 属性的初始值。</param>
        /// <param name="displayOrder">DisplayOrder 属性的初始值。</param>
        /// <param name="parentNodeId">ParentNodeId 属性的初始值。</param>
        public static SysFun CreateSysFun(global::System.Int32 nodeId, global::System.String displayName, global::System.Int32 displayOrder, global::System.Int32 parentNodeId)
        {
            SysFun sysFun = new SysFun();
            sysFun.NodeId = nodeId;
            sysFun.DisplayName = displayName;
            sysFun.DisplayOrder = displayOrder;
            sysFun.ParentNodeId = parentNodeId;
            return sysFun;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NodeId
        {
            get
            {
                return _NodeId;
            }
            set
            {
                if (_NodeId != value)
                {
                    OnNodeIdChanging(value);
                    ReportPropertyChanging("NodeId");
                    _NodeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NodeId");
                    OnNodeIdChanged();
                }
            }
        }
        private global::System.Int32 _NodeId;
        partial void OnNodeIdChanging(global::System.Int32 value);
        partial void OnNodeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NodeURL
        {
            get
            {
                return _NodeURL;
            }
            set
            {
                OnNodeURLChanging(value);
                ReportPropertyChanging("NodeURL");
                _NodeURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NodeURL");
                OnNodeURLChanged();
            }
        }
        private global::System.String _NodeURL;
        partial void OnNodeURLChanging(global::System.String value);
        partial void OnNodeURLChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisplayOrder
        {
            get
            {
                return _DisplayOrder;
            }
            set
            {
                OnDisplayOrderChanging(value);
                ReportPropertyChanging("DisplayOrder");
                _DisplayOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayOrder");
                OnDisplayOrderChanged();
            }
        }
        private global::System.Int32 _DisplayOrder;
        partial void OnDisplayOrderChanging(global::System.Int32 value);
        partial void OnDisplayOrderChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParentNodeId
        {
            get
            {
                return _ParentNodeId;
            }
            set
            {
                OnParentNodeIdChanging(value);
                ReportPropertyChanging("ParentNodeId");
                _ParentNodeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentNodeId");
                OnParentNodeIdChanged();
            }
        }
        private global::System.Int32 _ParentNodeId;
        partial void OnParentNodeIdChanging(global::System.Int32 value);
        partial void OnParentNodeIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="book_shopModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Users 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="loginId">LoginId 属性的初始值。</param>
        /// <param name="loginPwd">LoginPwd 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        /// <param name="address">Address 属性的初始值。</param>
        /// <param name="phone">Phone 属性的初始值。</param>
        /// <param name="mail">Mail 属性的初始值。</param>
        /// <param name="userStateId">UserStateId 属性的初始值。</param>
        /// <param name="actived">Actived 属性的初始值。</param>
        public static Users CreateUsers(global::System.Int32 id, global::System.String loginId, global::System.String loginPwd, global::System.String name, global::System.String address, global::System.String phone, global::System.String mail, global::System.Int32 userStateId, global::System.Boolean actived)
        {
            Users users = new Users();
            users.Id = id;
            users.LoginId = loginId;
            users.LoginPwd = loginPwd;
            users.Name = name;
            users.Address = address;
            users.Phone = phone;
            users.Mail = mail;
            users.UserStateId = userStateId;
            users.Actived = actived;
            return users;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginId
        {
            get
            {
                return _LoginId;
            }
            set
            {
                OnLoginIdChanging(value);
                ReportPropertyChanging("LoginId");
                _LoginId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoginId");
                OnLoginIdChanged();
            }
        }
        private global::System.String _LoginId;
        partial void OnLoginIdChanging(global::System.String value);
        partial void OnLoginIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginPwd
        {
            get
            {
                return _LoginPwd;
            }
            set
            {
                OnLoginPwdChanging(value);
                ReportPropertyChanging("LoginPwd");
                _LoginPwd = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoginPwd");
                OnLoginPwdChanged();
            }
        }
        private global::System.String _LoginPwd;
        partial void OnLoginPwdChanging(global::System.String value);
        partial void OnLoginPwdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mail
        {
            get
            {
                return _Mail;
            }
            set
            {
                OnMailChanging(value);
                ReportPropertyChanging("Mail");
                _Mail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mail");
                OnMailChanged();
            }
        }
        private global::System.String _Mail;
        partial void OnMailChanging(global::System.String value);
        partial void OnMailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserStateId
        {
            get
            {
                return _UserStateId;
            }
            set
            {
                OnUserStateIdChanging(value);
                ReportPropertyChanging("UserStateId");
                _UserStateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserStateId");
                OnUserStateIdChanged();
            }
        }
        private global::System.Int32 _UserStateId;
        partial void OnUserStateIdChanging(global::System.Int32 value);
        partial void OnUserStateIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Actived
        {
            get
            {
                return _Actived;
            }
            set
            {
                OnActivedChanging(value);
                ReportPropertyChanging("Actived");
                _Actived = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Actived");
                OnActivedChanged();
            }
        }
        private global::System.Boolean _Actived;
        partial void OnActivedChanging(global::System.Boolean value);
        partial void OnActivedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActiveCode
        {
            get
            {
                return _ActiveCode;
            }
            set
            {
                OnActiveCodeChanging(value);
                ReportPropertyChanging("ActiveCode");
                _ActiveCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActiveCode");
                OnActiveCodeChanged();
            }
        }
        private global::System.String _ActiveCode;
        partial void OnActiveCodeChanging(global::System.String value);
        partial void OnActiveCodeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("book_shopModel", "FK_Cart_Users", "Cart")]
        public EntityCollection<Cart> Cart
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cart>("book_shopModel.FK_Cart_Users", "Cart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cart>("book_shopModel.FK_Cart_Users", "Cart", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("book_shopModel", "FK_Order_User", "Orders")]
        public EntityCollection<Orders> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Orders>("book_shopModel.FK_Order_User", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Orders>("book_shopModel.FK_Order_User", "Orders", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("book_shopModel", "FK_Users_UserStates", "UserState")]
        public UserState UserState
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserState>("book_shopModel.FK_Users_UserStates", "UserState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserState>("book_shopModel.FK_Users_UserStates", "UserState").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserState> UserStateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserState>("book_shopModel.FK_Users_UserStates", "UserState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserState>("book_shopModel.FK_Users_UserStates", "UserState", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="book_shopModel", Name="UserState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserState : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserState 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static UserState CreateUserState(global::System.Int32 id, global::System.String name)
        {
            UserState userState = new UserState();
            userState.Id = id;
            userState.Name = name;
            return userState;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("book_shopModel", "FK_Users_UserStates", "Users")]
        public EntityCollection<Users> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Users>("book_shopModel.FK_Users_UserStates", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Users>("book_shopModel.FK_Users_UserStates", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="book_shopModel", Name="VidoFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VidoFile : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 VidoFile 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        public static VidoFile CreateVidoFile(global::System.Int32 id)
        {
            VidoFile vidoFile = new VidoFile();
            vidoFile.Id = id;
            return vidoFile;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FivPath
        {
            get
            {
                return _FivPath;
            }
            set
            {
                OnFivPathChanging(value);
                ReportPropertyChanging("FivPath");
                _FivPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FivPath");
                OnFivPathChanged();
            }
        }
        private global::System.String _FivPath;
        partial void OnFivPathChanging(global::System.String value);
        partial void OnFivPathChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileExt
        {
            get
            {
                return _FileExt;
            }
            set
            {
                OnFileExtChanging(value);
                ReportPropertyChanging("FileExt");
                _FileExt = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileExt");
                OnFileExtChanged();
            }
        }
        private global::System.String _FileExt;
        partial void OnFileExtChanging(global::System.String value);
        partial void OnFileExtChanged();

        #endregion
    
    }

    #endregion
    
}
